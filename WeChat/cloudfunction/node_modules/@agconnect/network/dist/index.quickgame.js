import t from"@agconnect/api";import{Logger as e}from"@agconnect/log";var o=function(){function t(){}return t.prototype.getPlatform=function(){return"JS-SDK-QuickGame"},t.prototype.getPlatformVersion=function(){return qg.getSystemInfoSync().system},t.prototype.getPackageName=function(){return""},t.prototype.getAppVersion=function(){return""},t.prototype.getLanguage=function(){return qg.getSystemInfoSync().language},t.prototype.getScript=function(){return""},t.prototype.getCountry=function(){return""},t}(),s=function(){function t(){this.logger=e.createLogger("AGCWebSocketService")}return t.prototype.connect=function(t,e,o){return this.websocket&&3!=this.websocket.readyState&&(this.websocket.close(),this.websocket=null),this.websocket=new WebSocket(t,o),null==this.websocket||null==this.websocket?(this.logger.error("webSocket create fail"),Promise.reject("webSocket create fail")):Promise.resolve()},t.prototype.getReadyState=function(){return this.websocket?Number(this.websocket.readyState):null},t.prototype.send=function(t,e,o){try{if(this.websocket){if(this.websocket.send(t),e)return e()}else if(o)return o()}catch(t){if(this.logger.error(t),o)return o()}},t.prototype.close=function(t,e,o,s){try{if(this.websocket){if(this.websocket.close(t,e),o)return o()}else if(s)return s()}catch(t){if(this.logger.error(t),s)return s()}},t.prototype.onOpen=function(t){this.websocket?this.websocket.onopen=t:this.logger.error("webSocket connect failed")},t.prototype.onMessage=function(t){this.websocket?this.websocket.onmessage=function(e){t&&t(e.data)}:this.logger.error("webSocket connect failed")},t.prototype.onClose=function(t){this.websocket?this.websocket.onclose=function(e){t&&t(e.code,e.reason,e.wasClean)}:this.logger.error("webSocket connect failed")},t.prototype.onError=function(t){this.websocket?this.websocket.onerror=function(e){t&&t(e)}:this.logger.error("webSocket connect failed")},t}(),n=function(){function t(){this.logger=e.createLogger("AGCFileTransloadService"),this.task=void 0}return t.prototype.downloadWithTask=function(t){var e=this;return new Promise((function(o,s){e.task=qg.downloadFile({url:t.url,header:t.header,filePath:t.filePath,success:function(e){var n={data:e.data,status:e.status,filePath:e.filePath,header:e.header};null!=t.validateStatus?t.validateStatus(e.statusCode)?o(n):s({code:e.statusCode,message:"downloadtask request failed with status code "+e.statusCode,response:{data:e.data,statusCode:e.statusCode}}):o(n)},fail:function(t,e){s({code:e,message:t.statusText,response:{data:t.data,statusCode:t.statusCode}})}})}))},t.prototype.onProgressUpdate=function(t){null!=this.task?this.task.onProgressUpdate(t):this.logger.error("please make sure you have called downloadWithTask function")},t.prototype.abort=function(){null!=this.task?this.task.abort():this.logger.error("please make sure you have called downloadWithTask function")},t}(),r=function(){function t(){this.logger=e.createLogger("AGCFileTransloadService"),this.task=void 0}return t.prototype.uploadWithTask=function(t){var e=this;return new Promise((function(o,s){e.task=qg.uploadFile({url:t.url,filePath:t.filePath,name:t.name,header:t.header,formData:t.formData,success:function(e){var n=e.data;if("string"==typeof e.data)try{n=JSON.parse(e.data)}catch(t){}var r={data:n,statusCode:e.statusCode};null!=t.validateStatus?t.validateStatus(e.statusCode)?o(r):s({code:e.statusCode,message:"uploadtask request failed with status code "+e.statusCode,response:{data:n,statusCode:e.statusCode}}):o(r)},fail:function(t,e){s({code:e,message:t.statusText,response:{data:t.data,status:e,statusText:t.statusText,headers:t.headers}})}})}))},t.prototype.onProgressUpdate=function(t){null!=this.task?this.task.onProgressUpdate(t):this.logger.error("please make sure you have called uploadWithTask function")},t.prototype.offProgressUpdate=function(){null!=this.task?this.task.offProgressUpdate():this.logger.error("please make sure you have called uploadWithTask function")},t.prototype.abort=function(){null!=this.task?this.task.abort():this.logger.error("please make sure you have called uploadWithTask function")},t}(),a=function(){function t(){this.uploadTaskIns=void 0,this.downloadTaskIns=void 0}return t.prototype.downloadWithTask=function(t){return this.downloadTaskIns||(this.downloadTaskIns=new n),this.downloadTaskIns.downloadWithTask(t)},t.prototype.downloadtaskOnProgressUpdate=function(t){this.downloadTaskIns||(this.downloadTaskIns=new n),this.downloadTaskIns.onProgressUpdate(t)},t.prototype.downloadtaskAbort=function(){this.downloadTaskIns||(this.downloadTaskIns=new n),this.downloadTaskIns.abort()},t.prototype.uploadWithTask=function(t){return this.uploadTaskIns||(this.uploadTaskIns=new r),this.uploadTaskIns.uploadWithTask(t)},t.prototype.uploadtaskOnProgressUpdate=function(t){this.uploadTaskIns||(this.uploadTaskIns=new r),this.uploadTaskIns.onProgressUpdate(t)},t.prototype.uploadtaskOffProgressUpdate=function(){this.uploadTaskIns||(this.uploadTaskIns=new r),this.uploadTaskIns.offProgressUpdate()},t.prototype.uploadtaskAbort=function(){this.uploadTaskIns||(this.uploadTaskIns=new r),this.uploadTaskIns.abort()},t}();function i(t,e){var o=!0;if(null!=e.transformResponse&&null!=e.transformResponse&&(o=!1),""===t.responseType||"text"===t.responseType){var s=void 0;try{s=o?JSON.parse(t.response):e.transformResponse[0](t.response)}catch(e){s=t.response}return s}return t.response}var u=function(){function t(){this.CancelToken=void 0}return t.prototype.post=function(t,e,o,s){return this.sendRequest("POST",t,e,o,s)},t.prototype.get=function(t,e,o,s){return this.sendRequest("GET",t,e,o,s)},t.prototype.delete=function(t,e,o,s){return this.sendRequest("DELETE",t,e,o,s)},t.prototype.put=function(t,e,o,s){return this.sendRequest("PUT",t,e,o,s)},t.prototype.sendRequest=function(t,e,o,s,n){if(!this.checkParam(e))return Promise.reject("URL IS ERROR!");var r={url:e,method:t,headers:s,timeout:null==n?void 0:n.timeout,transformResponse:null==n?void 0:n.transformResponse,responseType:null==n?void 0:n.responseType};return"PUT"!=t&&"POST"!=t||(r.data=o),"GET"!=t&&"DELETE"!=t||(r.params=o),function(t){return new Promise((function(e,o){var s=new XMLHttpRequest;if(null!=t.timeout&&null!=t.timeout&&(s.timeout=t.timeout),s.responseType=t.responseType,s.open(t.method,t.url),null!=t.headers&&null!=t.headers)for(var n in t.headers)t.headers.hasOwnProperty(n)&&s.setRequestHeader(n,t.headers[n]);var r=null;"PUT"!=t.method&&"POST"!=t.method&&"put"!=t.method&&"post"!=t.method||(r=t.data),"GET"!=t.method&&"DELETE"!=t.method&&"get"!=t.method&&"delete"!=t.method||(r=t.params),r instanceof ArrayBuffer||(r=JSON.stringify(r)),s.send(r),s.onreadystatechange=function(){if(4===s.readyState)if(200==s.status){var n={data:i(s,t),status:s.status,statusText:s.statusText,headers:s.getAllResponseHeaders()};e(n)}else{n={data:i(s,t),status:s.status,statusText:s.statusText};o(n)}}}))}(r)},t.prototype.checkParam=function(t){return!(!t||t.match(/\s/g)||!t.match(/^(ht)tp(s?)\:\/\/[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*(:(0-9)*)*(\/?)([a-zA-Z0-9\-\.\?\,\'\/\\\+&amp;%\$#_]*)?/))},t}();var d=t;d.registerInternalService({name:"AGCNetworkService",serviceFactory:function(t){return new u}}),d.registerInternalService({name:"AGCWebSocketService",serviceFactory:function(t){return new s}}),d.registerInternalService({name:"AGCPlatformInfoService",serviceFactory:function(t){return new o}}),d.registerInternalService({name:"AGCFileTransloadService",serviceFactory:function(t){return new a}});
