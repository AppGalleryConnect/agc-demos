import e from"@agconnect/api";import{DEFAULT_CATEGORY as t}from"@agconnect/core";var r=function(){function e(){this.encryptImpl=void 0}return e.prototype.setEncryptImp=function(e){this.encryptImpl=e},e.prototype.decrypt=function(e){return null!=this.encryptImpl&&null!=this.encryptImpl&&null!=e&&null!=e?this.encryptImpl.decrypt(e):e},e.prototype.encrypt=function(e){return null!=this.encryptImpl&&null!=this.encryptImpl&&null!=e&&null!=e?this.encryptImpl.encrypt(e):e},e}(),n=function(){function e(){this.agcCryptImpl=new r}return e.getInstance=function(t,r){!e.quickGameStoreMap.has(t)&&e.quickGameStoreMap.get(t)||e.quickGameStoreMap.set(t,new e);var n=e.quickGameStoreMap.get(t);return n.agcCryptImpl.setEncryptImp(r),n},e.prototype.get=function(e){if(null==e||null==e)return Promise.reject(new Error("key cannot be null or undefined"));try{return Promise.resolve(this.agcCryptImpl.decrypt(localStorage.getItem(e)))}catch(e){return Promise.reject(e)}},e.prototype.set=function(e,t){if(null==e||null==e)return Promise.reject(new Error("key cannot be null or undefined"));try{return localStorage.setItem(e,this.agcCryptImpl.encrypt(t)),Promise.resolve()}catch(e){return Promise.reject(e)}},e.prototype.remove=function(e){if(null==e||null==e)return Promise.reject(new Error("key cannot be null or undefined"));try{return localStorage.removeItem(e),Promise.resolve()}catch(e){return Promise.reject(e)}},e.quickGameStoreMap=new Map,e}(),o=function(){function e(e){this.name=t,e&&(this.name=e)}return e.prototype.getStorageInstance=function(e,t){return n.getInstance(this.name,t)},e.prototype.createPersistentStorage=function(){return n.getInstance(this.name)},e.prototype.createTemporaryStorage=function(){return n.getInstance(this.name)},e.prototype.createMemoryStorage=function(){return n.getInstance(this.name)},e}();e.registerInternalService({name:"AGCStorageService",serviceFactory:function(e){return new o(e.name())}});
