import { AxiosAdapter, CancelTokenStatic } from "axios";
import { AGCNetworkService } from "@agconnect/network-types";
export declare class NetworkImpl implements AGCNetworkService.AGCNetwork {
    constructor(adapter?: AxiosAdapter);
    getAxiosIns(): import("axios").AxiosStatic;
    post(url: string, param: any, headers?: any, config?: AGCNetworkService.AGCRequestConfig): Promise<AGCNetworkService.AGCResponse<any>>;
    get(url: string, param?: any, headers?: any, config?: AGCNetworkService.AGCRequestConfig): Promise<AGCNetworkService.AGCResponse<any>>;
    delete(url: string, param?: any, headers?: any, config?: AGCNetworkService.AGCRequestConfig): Promise<AGCNetworkService.AGCResponse<any>>;
    put(url: string, param?: any, headers?: any, config?: AGCNetworkService.AGCRequestConfig): Promise<AGCNetworkService.AGCResponse<any>>;
    CancelToken: CancelTokenStatic;
    private sendRequest;
    private checkParam;
}
