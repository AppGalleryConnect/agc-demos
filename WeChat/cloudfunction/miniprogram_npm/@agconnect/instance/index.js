module.exports = (function() {
var __MODS__ = {};
var __DEFINE__ = function(modId, func, req) { var m = { exports: {}, _tempexports: {} }; __MODS__[modId] = { status: 0, func: func, req: req, m: m }; };
var __REQUIRE__ = function(modId, source) { if(!__MODS__[modId]) return require(source); if(!__MODS__[modId].status) { var m = __MODS__[modId].m; m._exports = m._tempexports; var desp = Object.getOwnPropertyDescriptor(m, "exports"); if (desp && desp.configurable) Object.defineProperty(m, "exports", { set: function (val) { if(typeof val === "object" && val !== m._exports) { m._exports.__proto__ = val.__proto__; Object.keys(val).forEach(function (k) { m._exports[k] = val[k]; }); } m._tempexports = val }, get: function () { return m._tempexports; } }); __MODS__[modId].status = 1; __MODS__[modId].func(__MODS__[modId].req, m, m.exports); } return __MODS__[modId].m.exports; };
var __REQUIRE_WILDCARD__ = function(obj) { if(obj && obj.__esModule) { return obj; } else { var newObj = {}; if(obj != null) { for(var k in obj) { if (Object.prototype.hasOwnProperty.call(obj, k)) newObj[k] = obj[k]; } } newObj.default = obj; return newObj; } };
var __REQUIRE_DEFAULT__ = function(obj) { return obj && obj.__esModule ? obj.default : obj; };
__DEFINE__(1631754354877, function(require, module, exports) {
var t=require("@agconnect/api"),e=require("@agconnect/core"),o=require("@agconnect/log");function n(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var i=n(t),r=o.Logger.createLogger("agconnectInstance"),c=function(){function t(t,o){this.appVersion="",this._config=null,this._customCredentialsProvider=null,this._customAuthProvider=null,this.cryptImpl=void 0,this.option=null,this.repo_=t,this.name_=o||e.DEFAULT_CATEGORY}return t.prototype.name=function(){return this.name_},t.prototype.configInstance=function(t){return this._config=t,this},t.prototype.config=function(){if(null==this._config)throw new Error("AGCInstance not configurated. call agconnect.instance().configInstance() to configure the agconnect.");return this._config},t.prototype.setApiKey=function(t){this.checkBeforeSetKey(),this._config.client.api_key=t},t.prototype.setClientSecret=function(t){this.checkBeforeSetKey(),this._config.client.client_secret=t},t.prototype.setClientId=function(t){this.checkBeforeSetKey(),this._config.client.client_id=t},t.prototype.getService=function(t){return this.repo_.getService(t,this,this.name_)},t.prototype.setCustomCredentialsProvider=function(t){return t?t.getToken?1!=t.getToken.length?(r.error("the customCredentialsProvider getToken method must contain single parameter：forceRefresh."),!1):(this._customCredentialsProvider=t,!0):(r.error("the customCredentialsProvider must contain getToken method."),!1):(this._customCredentialsProvider=t,!0)},t.prototype.setCustomAuthProvider=function(t){return t?t.getToken?1!=t.getToken.length?(r.error("the customAuthProvider getToken method must contain single parameter：forceRefresh."),!1):(this._customAuthProvider=t,!0):(r.error("the customAuthProvider must contain getToken method."),!1):(this._customAuthProvider=t,!0)},t.prototype.getCustomCredentialsProvider=function(){return this._customCredentialsProvider},t.prototype.getCustomAuthProvider=function(){return this._customAuthProvider},t.prototype.setCryptImp=function(t){return t?t.decrypt&&t.encrypt?(this.cryptImpl=t,!0):(r.error("the crypt is not exist necessary methods."),!1):(r.error("the crypt is not available."),!1)},t.prototype.setAppVersion=function(t){this.appVersion=t},t.prototype.setOption=function(t){this.option=t},t.prototype.addHttpToUrl=function(t){return t&&!t.startsWith("https://")?"https://"+t:t},t.prototype.getGwUrl=function(){return null!=this.option?this.option.routePolicy==Number(1)?this.addHttpToUrl(this._config.agcgw_all.CN):this.option.routePolicy==Number(2)?this.addHttpToUrl(this._config.agcgw_all.DE):this.option.routePolicy==Number(3)?this.addHttpToUrl(this._config.agcgw_all.RU):this.option.routePolicy==Number(4)?this.addHttpToUrl(this._config.agcgw_all.SG):this.addHttpToUrl(this._config.agcgw.url):this.addHttpToUrl(this._config.agcgw.url)},t.prototype.getGwBackUrl=function(){return null!=this.option?1==this.option.routePolicy?this.addHttpToUrl(this._config.agcgw_all.CN_back):2==this.option.routePolicy?this.addHttpToUrl(this._config.agcgw_all.DE_back):3==this.option.routePolicy?this.addHttpToUrl(this._config.agcgw_all.RU_back):4==this.option.routePolicy?this.addHttpToUrl(this._config.agcgw_all.SG_back):this.addHttpToUrl(this._config.agcgw.backurl):this.addHttpToUrl(this._config.agcgw.backurl)},t.prototype.getAppVersion=function(){return this.appVersion},t.prototype.getCryptImp=function(){return this.cryptImpl},t.prototype.checkBeforeSetKey=function(){if(null==this._config)throw new Error("AGCInstance not configurated. call agconnect.instance().configInstance() to configure the agconnect.");if(!this._config.hasOwnProperty("client"))throw new Error("AGCInstance config value should contain key: client.")},t}(),s=new e.InstanceMap((function(t){return new c(i.default,t[0])}));i.default.registerApiProvider("instance",(function(t){return s.get(t)}));

}, function(modId) {var map = {}; return __REQUIRE__(map[modId], modId); })
return __REQUIRE__(1631754354877);
})()
//miniprogram-npm-outsideDeps=["@agconnect/api","@agconnect/core","@agconnect/log"]
//# sourceMappingURL=index.js.map